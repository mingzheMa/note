import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,d as t}from"./app.002a81c8.js";const e={},p=t(`<h1 id="模板字符串" tabindex="-1"><a class="header-anchor" href="#模板字符串" aria-hidden="true">#</a> 模板字符串</h1><h2 id="简单使用" tabindex="-1"><a class="header-anchor" href="#简单使用" aria-hidden="true">#</a> 简单使用</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Word</span> <span class="token operator">=</span> <span class="token string">&quot;word&quot;</span>

<span class="token keyword">type</span> <span class="token class-name">Say</span> <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">hellow </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Word<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span> <span class="token comment">// &quot;hellow word&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="泛型" tabindex="-1"><a class="header-anchor" href="#泛型" aria-hidden="true">#</a> 泛型</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Greet<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">boolean</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">|</span> <span class="token keyword">undefined</span> <span class="token operator">|</span> bigint<span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Hello </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">T</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">Greet1</span> <span class="token operator">=</span> Greet<span class="token operator">&lt;</span><span class="token string">&quot;linbudu&quot;</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// &quot;Hello linbudu&quot;</span>
<span class="token keyword">type</span> <span class="token class-name">Greet2</span> <span class="token operator">=</span> Greet<span class="token operator">&lt;</span><span class="token number">599</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// &quot;Hello 599&quot;</span>
<span class="token keyword">type</span> <span class="token class-name">Greet3</span> <span class="token operator">=</span> Greet<span class="token operator">&lt;</span><span class="token boolean">true</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// &quot;Hello true&quot;</span>
<span class="token keyword">type</span> <span class="token class-name">Greet4</span> <span class="token operator">=</span> Greet<span class="token operator">&lt;</span><span class="token keyword">null</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// &quot;Hello null&quot;</span>
<span class="token keyword">type</span> <span class="token class-name">Greet5</span> <span class="token operator">=</span> Greet<span class="token operator">&lt;</span><span class="token keyword">undefined</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// &quot;Hello undefined&quot;</span>
<span class="token keyword">type</span> <span class="token class-name">Greet6</span> <span class="token operator">=</span> Greet<span class="token operator">&lt;</span><span class="token number">0x1fffffffffffff</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// &quot;Hello 9007199254740991&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="基本类型" tabindex="-1"><a class="header-anchor" href="#基本类型" aria-hidden="true">#</a> 基本类型</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// \`hellow 任何字符串\`</span>
<span class="token keyword">type</span> <span class="token class-name">say</span> <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">hellow </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token builtin">string</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
<span class="token comment">// \`hellow true\`、\`hellow false\`</span>
<span class="token keyword">type</span> <span class="token class-name">say1</span> <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">hellow </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token builtin">boolean</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
<span class="token comment">// \`hellow 123\`</span>
<span class="token keyword">type</span> <span class="token class-name">say2</span> <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">hellow </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token builtin">number</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="联合类型" tabindex="-1"><a class="header-anchor" href="#联合类型" aria-hidden="true">#</a> 联合类型</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Str</span> <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token string">&quot;a&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;b&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;c&quot;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> say hellow</span><span class="token template-punctuation string">\`</span></span> <span class="token comment">// &quot;a say hellow&quot; | &quot;b say hellow&quot; | &quot;c say hellow&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="分发" tabindex="-1"><a class="header-anchor" href="#分发" aria-hidden="true">#</a> 分发</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">SizeRecord<span class="token operator">&lt;</span>Size <span class="token keyword">extends</span> <span class="token builtin">string</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Size<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-Record</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">Size</span> <span class="token operator">=</span> <span class="token string">&#39;Small&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;Middle&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;Large&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">UnionSizeRecord</span> <span class="token operator">=</span> SizeRecord<span class="token operator">&lt;</span>Size<span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// &quot;Small-Record&quot; | &quot;Middle-Record&quot; | &quot;Huge-Record&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="函数" tabindex="-1"><a class="header-anchor" href="#函数" aria-hidden="true">#</a> 函数</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> greet <span class="token operator">=</span> <span class="token punctuation">(</span>to<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Hello </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token builtin">string</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Hello </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>to<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="结合infer" tabindex="-1"><a class="header-anchor" href="#结合infer" aria-hidden="true">#</a> 结合infer</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">ReverseName<span class="token operator">&lt;</span>Str <span class="token keyword">extends</span> <span class="token builtin">string</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> Str <span class="token keyword">extends</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">infer</span> First<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">infer</span> Last<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span> <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Capitalize<span class="token operator">&lt;</span>Last<span class="token operator">&gt;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>First<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> Str<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="内置工具" tabindex="-1"><a class="header-anchor" href="#内置工具" aria-hidden="true">#</a> 内置工具</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 大写</span>
<span class="token keyword">type</span> <span class="token class-name">HeavyName</span> <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Uppercase<span class="token operator">&lt;</span><span class="token string">&quot;linbudu&quot;</span><span class="token operator">&gt;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span> <span class="token comment">// &quot;LINBUDU&quot;</span>
<span class="token comment">// 首字母大写</span>
<span class="token keyword">type</span> <span class="token class-name">RespectName</span> <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Capitalize<span class="token operator">&lt;</span><span class="token string">&quot;linbudu&quot;</span><span class="token operator">&gt;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span> <span class="token comment">// &quot;Linbudu&quot;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="例子1-版本号" tabindex="-1"><a class="header-anchor" href="#例子1-版本号" aria-hidden="true">#</a> 例子1：版本号</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Version</span> <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token builtin">number</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token builtin">number</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token builtin">number</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="例子2-大量结构相同数据不同的" tabindex="-1"><a class="header-anchor" href="#例子2-大量结构相同数据不同的" aria-hidden="true">#</a> 例子2：大量结构相同数据不同的</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">SKU</span></span> <span class="token operator">=</span>
  <span class="token operator">|</span> <span class="token string">&#39;iphone-16G-official&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;xiaomi-16G-official&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;honor-16G-official&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;iphone-16G-second-hand&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;xiaomi-16G-second-hand&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;honor-16G-second-hand&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;iphone-64G-official&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;xiaomi-64G-official&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;honor-64G-official&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;iphone-64G-second-hand&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;xiaomi-64G-second-hand&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;honor-64G-second-hand&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Brand</span> <span class="token operator">=</span> <span class="token string">&#39;iphone&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;xiaomi&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;honor&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">Memory</span> <span class="token operator">=</span> <span class="token string">&#39;16G&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;64G&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">ItemType</span> <span class="token operator">=</span> <span class="token string">&#39;official&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;second-hand&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">SKU</span></span> <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Brand<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Memory<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>ItemType<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果组合出来的联合类型中某个不存在，可以使用差值做处理</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">SKU</span></span> <span class="token operator">=</span>
  <span class="token operator">|</span> <span class="token string">&#39;iphone-16G-official&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;xiaomi-16G-official&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;honor-16G-official&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;iphone-16G-second-hand&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;xiaomi-16G-second-hand&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;honor-16G-second-hand&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;iphone-64G-official&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;xiaomi-64G-official&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;honor-64G-official&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;iphone-64G-second-hand&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;xiaomi-64G-second-hand&#39;</span>
  <span class="token operator">|</span> <span class="token string">&#39;honor-64G-second-hand&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">Difference<span class="token operator">&lt;</span><span class="token constant">A</span><span class="token punctuation">,</span> <span class="token constant">B</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">A</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">B</span></span> <span class="token operator">?</span> <span class="token builtin">never</span> <span class="token operator">:</span> <span class="token constant">A</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">Test</span> <span class="token operator">=</span> Difference<span class="token operator">&lt;</span><span class="token constant">SKU</span><span class="token punctuation">,</span> <span class="token string">&#39;iphone-16G-official&#39;</span><span class="token operator">&gt;</span> <span class="token comment">// 结果不包含&#39;iphone-16G-official&#39;的联合类型</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="例子3-修改键名" tabindex="-1"><a class="header-anchor" href="#例子3-修改键名" aria-hidden="true">#</a> 例子3：修改键名</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">CopyWithRename<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> object<span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span><span class="token constant">K</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span> <span class="token keyword">as</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">modified_</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token builtin">string</span> <span class="token operator">&amp;</span> <span class="token constant">K</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">K</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里因为K的值可能是string、number、symbol，而模板字符串不接受symbol类型，这里确保<code>string &amp; K</code>不是字符串就是never</p>`,27),o=[p];function l(i,c){return s(),a("div",null,o)}const k=n(e,[["render",l],["__file","0.模板字符串.html.vue"]]);export{k as default};
