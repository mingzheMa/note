import{_ as t}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as p,c as e,a as n,b as o,e as c,d as s,r as i}from"./app.002a81c8.js";const l={},u=s('<h1 id="indexeddb" tabindex="-1"><a class="header-anchor" href="#indexeddb" aria-hidden="true">#</a> indexedDB</h1><h2 id="背景" tabindex="-1"><a class="header-anchor" href="#背景" aria-hidden="true">#</a> 背景</h2><p>前端本地存储方案有</p><ul><li>cookie</li><li>localStorage/sessionStorage</li><li>indexedDB</li></ul><p>一般浏览器会限制 <code>cookie</code>、<code>localStorage/sessionStorage</code> 的存储大小，分别为 4KB、4MB（每个浏览器限制不一样）</p><p>indexedDB 具有以下特点</p><ul><li>键值型数据库：似于 MongoDB，以键值对的形式存储数据</li><li>异步调用：在事件中处理数据，不会阻塞主线程运行</li><li>支持事务：处理数据是基于事务的，当一个操作出现问题，整个事务回滚</li><li>同源限制：和其他本地存储方案一样，不能跨域</li><li>存储空间：一般不少于 250MB</li><li>支持二进制数据：可以存储二进制数据</li></ul><h2 id="概念" tabindex="-1"><a class="header-anchor" href="#概念" aria-hidden="true">#</a> 概念</h2>',8),k={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/IndexedDB_API",target:"_blank",rel:"noopener noreferrer"},r=s(`<h3 id="仓库-objectstore" tabindex="-1"><a class="header-anchor" href="#仓库-objectstore" aria-hidden="true">#</a> 仓库 ObjectStore</h3><p>indexedDB 中没有表的概念，仓库可以理解为表</p><h3 id="索引-index" tabindex="-1"><a class="header-anchor" href="#索引-index" aria-hidden="true">#</a> 索引 Index</h3><p>indexedDB 以键值对的形式存储，一般值的类型为对象，例如：<code>{name: &#39;ma&#39;, age: 18}</code>，索引可以帮助我们快速通过某个 key 找到该值，例如：配置了索引 <code>age</code>，那么可以通过 <code>age === 18</code> 找到 <code>{name: &#39;ma&#39;, age: 18}</code></p><h3 id="主键" tabindex="-1"><a class="header-anchor" href="#主键" aria-hidden="true">#</a> 主键</h3><p>用于查找数据，创建仓库可以指定主键名称，可以指定为某个索引，或者设置为自增组件</p><h3 id="游标-cursor" tabindex="-1"><a class="header-anchor" href="#游标-cursor" aria-hidden="true">#</a> 游标 Cursor</h3><p>用于查询数据，查询的过程类似迭代，游标可以理解为迭代器的指针，在开始时指针指向数据库中第一条数据，每次调用游标上的方法就会返回后一行数据，以此类推直至后一行数据不存在</p><h3 id="事务-transaction" tabindex="-1"><a class="header-anchor" href="#事务-transaction" aria-hidden="true">#</a> 事务 Transaction</h3><p>数据的增删改查都基于事务，类似于一系列操作的集合，当某个操作出现错误，可以整体回滚这部分操作</p><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h2><p>我们创建一些全局变量用来存放数据</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 数据库连接</span>
<span class="token keyword">let</span> DBLink<span class="token operator">:</span> IDBOpenDBRequest<span class="token punctuation">;</span>
<span class="token comment">// 数据库</span>
<span class="token keyword">let</span> <span class="token constant">DB</span><span class="token operator">:</span> IDBDatabase<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="连接数据库" tabindex="-1"><a class="header-anchor" href="#连接数据库" aria-hidden="true">#</a> 连接数据库</h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 创建一个数据库连接</span>
<span class="token comment">// 参数1 为数据库名称，如果不存在则创建</span>
<span class="token comment">// 参数2 为数据库版本，默认为1</span>
DBLink <span class="token operator">=</span> window<span class="token punctuation">.</span>indexedDB<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&#39;admin&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 通过事件监听数据库连接状态</span>
<span class="token comment">// 数据库连接成功</span>
DBLink<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;success&#39;</span><span class="token punctuation">,</span> event <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// @ts-expect-error</span>
    <span class="token constant">DB</span> <span class="token operator">=</span> <span class="token punctuation">(</span>event <span class="token keyword">as</span> IDBVersionChangeEvent<span class="token punctuation">)</span><span class="token punctuation">.</span>target<span class="token punctuation">.</span>result<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 数据库版本更新</span>
DBLink<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;upgradeneeded&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>event<span class="token operator">:</span> IDBVersionChangeEvent<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token constant">DB</span> <span class="token operator">=</span> event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>result<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 数据库连接失败</span>
DBLink<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> event <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建仓库" tabindex="-1"><a class="header-anchor" href="#创建仓库" aria-hidden="true">#</a> 创建仓库</h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span>: 初始化数据库
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>*<span class="token punctuation">}</span> DB 数据库IDBDatabase实例
 * <span class="token keyword">@return</span> <span class="token punctuation">{</span>*<span class="token punctuation">}</span>
 */</span>
<span class="token keyword">function</span> <span class="token function">initDB</span><span class="token punctuation">(</span><span class="token constant">DB</span><span class="token operator">:</span> IDBDatabase<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 初始化users仓库，如果users仓库不存在</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token constant">DB</span><span class="token punctuation">.</span>objectStoreNames<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&#39;users&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 创建仓库</span>
        <span class="token keyword">const</span> store<span class="token operator">:</span> IDBObjectStore <span class="token operator">=</span> <span class="token constant">DB</span><span class="token punctuation">.</span><span class="token function">createObjectStore</span><span class="token punctuation">(</span><span class="token string">&#39;users&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> autoIncrement<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 初始化仓库索引，unique为是否重复</span>
        store<span class="token punctuation">.</span><span class="token function">createIndex</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> unique<span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        store<span class="token punctuation">.</span><span class="token function">createIndex</span><span class="token punctuation">(</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> unique<span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        store<span class="token punctuation">.</span><span class="token function">createIndex</span><span class="token punctuation">(</span><span class="token string">&#39;sex&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;sex&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> unique<span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// 数据库版本更新</span>
DBLink<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;upgradeneeded&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>event<span class="token operator">:</span> IDBVersionChangeEvent<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// @ts-expect-error</span>
    <span class="token constant">DB</span> <span class="token operator">=</span> event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>result<span class="token punctuation">;</span>
    <span class="token comment">// 初始化数据库</span>
    <span class="token function">initDB</span><span class="token punctuation">(</span><span class="token constant">DB</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="增加数据" tabindex="-1"><a class="header-anchor" href="#增加数据" aria-hidden="true">#</a> 增加数据</h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span>: 添加数据
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>IDBDatabase<span class="token punctuation">}</span> DB 数据库
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>string<span class="token punctuation">}</span> storeName 仓库名称
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>any<span class="token punctuation">}</span> data 数据
 * <span class="token keyword">@return</span> <span class="token punctuation">{</span>*<span class="token punctuation">}</span>
 */</span>
<span class="token keyword">function</span> <span class="token function">addData</span><span class="token punctuation">(</span><span class="token constant">DB</span><span class="token operator">:</span> IDBDatabase<span class="token punctuation">,</span> storeName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> data<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 创建一个事务，只针对一个仓库</span>
    <span class="token keyword">const</span> transaction<span class="token operator">:</span> IDBTransaction <span class="token operator">=</span> <span class="token constant">DB</span><span class="token punctuation">.</span><span class="token function">transaction</span><span class="token punctuation">(</span>storeName<span class="token punctuation">,</span> <span class="token string">&#39;readwrite&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 通过事务获取仓库实例</span>
    <span class="token keyword">const</span> store<span class="token operator">:</span> IDBObjectStore <span class="token operator">=</span> transaction<span class="token punctuation">.</span><span class="token function">objectStore</span><span class="token punctuation">(</span>storeName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 添加数据，添加的数据的key尽量和索引一一对应</span>
    store<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

DBLink<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;success&#39;</span><span class="token punctuation">,</span> event <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// @ts-expect-error</span>
    <span class="token constant">DB</span> <span class="token operator">=</span> <span class="token punctuation">(</span>event <span class="token keyword">as</span> IDBVersionChangeEvent<span class="token punctuation">)</span><span class="token punctuation">.</span>target<span class="token punctuation">.</span>result<span class="token punctuation">;</span>

    <span class="token comment">// 添加数据</span>
    <span class="token function">addData</span><span class="token punctuation">(</span><span class="token constant">DB</span><span class="token punctuation">,</span> <span class="token string">&#39;users&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
        name<span class="token operator">:</span> <span class="token string">&#39;ma&#39;</span><span class="token punctuation">,</span>
        age<span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span>
        sex<span class="token operator">:</span> <span class="token number">1</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">addData</span><span class="token punctuation">(</span><span class="token constant">DB</span><span class="token punctuation">,</span> <span class="token string">&#39;users&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
        name<span class="token operator">:</span> <span class="token string">&#39;ming&#39;</span><span class="token punctuation">,</span>
        age<span class="token operator">:</span> <span class="token number">19</span><span class="token punctuation">,</span>
        sex<span class="token operator">:</span> <span class="token number">0</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="查找数据" tabindex="-1"><a class="header-anchor" href="#查找数据" aria-hidden="true">#</a> 查找数据</h3><p>以下代码分别使用主键、游标、索引获取数据</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span>: 通过主键查找
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>IDBDatabase<span class="token punctuation">}</span> DB 数据库
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>string<span class="token punctuation">}</span> storeName 仓库名称
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>IDBValidKey<span class="token punctuation">}</span> key 主键
 * <span class="token keyword">@return</span> <span class="token punctuation">{</span>*<span class="token punctuation">}</span>
 */</span>
<span class="token keyword">function</span> <span class="token function">findData4Key</span><span class="token punctuation">(</span><span class="token constant">DB</span><span class="token operator">:</span> IDBDatabase<span class="token punctuation">,</span> storeName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> key<span class="token operator">:</span> IDBValidKey<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 创建一个事务，只针对一个仓库</span>
    <span class="token keyword">const</span> transaction<span class="token operator">:</span> IDBTransaction <span class="token operator">=</span> <span class="token constant">DB</span><span class="token punctuation">.</span><span class="token function">transaction</span><span class="token punctuation">(</span>storeName<span class="token punctuation">,</span> <span class="token string">&#39;readwrite&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 通过事务获取仓库实例</span>
    <span class="token keyword">const</span> store<span class="token operator">:</span> IDBObjectStore <span class="token operator">=</span> transaction<span class="token punctuation">.</span><span class="token function">objectStore</span><span class="token punctuation">(</span>storeName<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>resove<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> res<span class="token operator">:</span> IDBRequest <span class="token operator">=</span> store<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>

        res<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;success&#39;</span><span class="token punctuation">,</span> event <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">resove</span><span class="token punctuation">(</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>target <span class="token keyword">as</span> IDBRequest<span class="token punctuation">)</span><span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        res<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span>: 通过游标获取所有数据
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>IDBDatabase<span class="token punctuation">}</span> DB 数据库
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>string<span class="token punctuation">}</span> storeName 仓库名称
 * <span class="token keyword">@return</span> <span class="token punctuation">{</span>*<span class="token punctuation">}</span>
 */</span>
<span class="token keyword">function</span> <span class="token function">findData4All</span><span class="token punctuation">(</span><span class="token constant">DB</span><span class="token operator">:</span> IDBDatabase<span class="token punctuation">,</span> storeName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 创建一个事务，只针对一个仓库</span>
    <span class="token keyword">const</span> transaction<span class="token operator">:</span> IDBTransaction <span class="token operator">=</span> <span class="token constant">DB</span><span class="token punctuation">.</span><span class="token function">transaction</span><span class="token punctuation">(</span>storeName<span class="token punctuation">,</span> <span class="token string">&#39;readwrite&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 通过事务获取仓库实例</span>
    <span class="token keyword">const</span> store<span class="token operator">:</span> IDBObjectStore <span class="token operator">=</span> transaction<span class="token punctuation">.</span><span class="token function">objectStore</span><span class="token punctuation">(</span>storeName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 获取游标</span>
    <span class="token keyword">const</span> cursor<span class="token operator">:</span> IDBRequest<span class="token operator">&lt;</span>IDBCursorWithValue <span class="token operator">|</span> <span class="token keyword">null</span><span class="token operator">&gt;</span> <span class="token operator">=</span> store<span class="token punctuation">.</span><span class="token function">openCursor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>resove<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> list<span class="token operator">:</span> IDBCursorWithValue<span class="token punctuation">[</span><span class="token string">&#39;value&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        cursor<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;success&#39;</span><span class="token punctuation">,</span> event <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">// @ts-expect-error</span>
            <span class="token keyword">const</span> currentCursor<span class="token operator">:</span> IDBCursorWithValue <span class="token operator">=</span> event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>result<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>currentCursor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// 必须要检查</span>
                list<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>currentCursor<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
                currentCursor<span class="token punctuation">.</span><span class="token function">continue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment">// 迭代完毕</span>
                <span class="token function">resove</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        cursor<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span>: 通过索引查找
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>IDBDatabase<span class="token punctuation">}</span> DB 数据库
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>string<span class="token punctuation">}</span> storeName 仓库名称
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>IDBValidKey<span class="token punctuation">}</span> key 主键
 * <span class="token keyword">@return</span> <span class="token punctuation">{</span>*<span class="token punctuation">}</span>
 */</span>
<span class="token keyword">function</span> <span class="token function">findData4Index</span><span class="token punctuation">(</span><span class="token constant">DB</span><span class="token operator">:</span> IDBDatabase<span class="token punctuation">,</span> storeName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> indexKey<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> indexValue<span class="token operator">:</span> IDBValidKey <span class="token operator">|</span> IDBKeyRange<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 创建一个事务，只针对一个仓库</span>
    <span class="token keyword">const</span> transaction<span class="token operator">:</span> IDBTransaction <span class="token operator">=</span> <span class="token constant">DB</span><span class="token punctuation">.</span><span class="token function">transaction</span><span class="token punctuation">(</span>storeName<span class="token punctuation">,</span> <span class="token string">&#39;readwrite&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 通过事务获取仓库实例</span>
    <span class="token keyword">const</span> store<span class="token operator">:</span> IDBObjectStore <span class="token operator">=</span> transaction<span class="token punctuation">.</span><span class="token function">objectStore</span><span class="token punctuation">(</span>storeName<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>resove<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> res<span class="token operator">:</span> IDBRequest <span class="token operator">=</span> store<span class="token punctuation">.</span><span class="token function">index</span><span class="token punctuation">(</span>indexKey<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>indexValue<span class="token punctuation">)</span><span class="token punctuation">;</span>

        res<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;success&#39;</span><span class="token punctuation">,</span> event <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">resove</span><span class="token punctuation">(</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>target <span class="token keyword">as</span> IDBRequest<span class="token punctuation">)</span><span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        res<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

DBLink<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;success&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> event <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// @ts-expect-error</span>
    <span class="token constant">DB</span> <span class="token operator">=</span> <span class="token punctuation">(</span>event <span class="token keyword">as</span> IDBVersionChangeEvent<span class="token punctuation">)</span><span class="token punctuation">.</span>target<span class="token punctuation">.</span>result<span class="token punctuation">;</span>

    <span class="token comment">// 根据key获取数据</span>
    <span class="token keyword">const</span> findData4KeyRes <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">findData4Key</span><span class="token punctuation">(</span><span class="token constant">DB</span><span class="token punctuation">,</span> <span class="token string">&#39;users&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;findData4KeyRes&#39;</span><span class="token punctuation">,</span> findData4KeyRes<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {name: &#39;ma&#39;, age: 18, sex: 1}</span>

    <span class="token comment">// 根据游标获取所有数据</span>
    <span class="token keyword">const</span> findData4AllRes <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">findData4All</span><span class="token punctuation">(</span><span class="token constant">DB</span><span class="token punctuation">,</span> <span class="token string">&#39;users&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;findData4AllRes&#39;</span><span class="token punctuation">,</span> findData4AllRes<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [...]</span>

    <span class="token comment">// 根据索引获取数据</span>
    <span class="token keyword">const</span> findData4IndexRes <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">findData4Index</span><span class="token punctuation">(</span><span class="token constant">DB</span><span class="token punctuation">,</span> <span class="token string">&#39;users&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;ma&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;findData4IndexRes&#39;</span><span class="token punctuation">,</span> findData4IndexRes<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {name: &#39;ma&#39;, age: 18, sex: 1}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>游标可以获取全部数据，索引可以查找指定数据但只有一个，可以使用<strong>索引 + 游标</strong>的形式查找所有符合的数据</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span>: 通过索引+游标获取所有数据
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>IDBDatabase<span class="token punctuation">}</span> DB 数据库
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>string<span class="token punctuation">}</span> storeName 仓库名称
 * <span class="token keyword">@return</span> <span class="token punctuation">{</span>*<span class="token punctuation">}</span>
 */</span>
<span class="token keyword">function</span> <span class="token function">findData4IndexCursor</span><span class="token punctuation">(</span>
    <span class="token constant">DB</span><span class="token operator">:</span> IDBDatabase<span class="token punctuation">,</span>
    storeName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
    indexKey<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
    indexValue<span class="token operator">:</span> IDBValidKey <span class="token operator">|</span> IDBKeyRange
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 创建一个事务，只针对一个仓库</span>
    <span class="token keyword">const</span> transaction<span class="token operator">:</span> IDBTransaction <span class="token operator">=</span> <span class="token constant">DB</span><span class="token punctuation">.</span><span class="token function">transaction</span><span class="token punctuation">(</span>storeName<span class="token punctuation">,</span> <span class="token string">&#39;readwrite&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 通过事务获取仓库实例</span>
    <span class="token keyword">const</span> store<span class="token operator">:</span> IDBObjectStore <span class="token operator">=</span> transaction<span class="token punctuation">.</span><span class="token function">objectStore</span><span class="token punctuation">(</span>storeName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 获取游标</span>
    <span class="token keyword">const</span> cursor<span class="token operator">:</span> IDBRequest<span class="token operator">&lt;</span>IDBCursorWithValue <span class="token operator">|</span> <span class="token keyword">null</span><span class="token operator">&gt;</span> <span class="token operator">=</span> store
        <span class="token punctuation">.</span><span class="token function">index</span><span class="token punctuation">(</span>indexKey<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">openCursor</span><span class="token punctuation">(</span>IDBKeyRange<span class="token punctuation">.</span><span class="token function">only</span><span class="token punctuation">(</span>indexValue<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>resove<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> list<span class="token operator">:</span> IDBCursorWithValue<span class="token punctuation">[</span><span class="token string">&#39;value&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        cursor<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;success&#39;</span><span class="token punctuation">,</span> event <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">// @ts-expect-error</span>
            <span class="token keyword">const</span> currentCursor<span class="token operator">:</span> IDBCursorWithValue <span class="token operator">=</span> event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>result<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>currentCursor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// 必须要检查</span>
                list<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>currentCursor<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
                currentCursor<span class="token punctuation">.</span><span class="token function">continue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment">// 迭代完毕</span>
                <span class="token function">resove</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        cursor<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

DBLink<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;success&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> event <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// @ts-expect-error</span>
    <span class="token constant">DB</span> <span class="token operator">=</span> <span class="token punctuation">(</span>event <span class="token keyword">as</span> IDBVersionChangeEvent<span class="token punctuation">)</span><span class="token punctuation">.</span>target<span class="token punctuation">.</span>result<span class="token punctuation">;</span>

    <span class="token comment">// 根据索引+游标获取数据</span>
    <span class="token keyword">const</span> findData4IndexCursorRes <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">findData4IndexCursor</span><span class="token punctuation">(</span><span class="token constant">DB</span><span class="token punctuation">,</span> <span class="token string">&#39;users&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;ma&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;findData4IndexCursorRes&#39;</span><span class="token punctuation">,</span> findData4IndexCursorRes<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="修改数据" tabindex="-1"><a class="header-anchor" href="#修改数据" aria-hidden="true">#</a> 修改数据</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span>: 通过主键修改数据
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>IDBDatabase<span class="token punctuation">}</span> DB
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>string<span class="token punctuation">}</span> storeName
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>IDBValidKey<span class="token punctuation">}</span> key
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>any<span class="token punctuation">}</span> data
 * <span class="token keyword">@return</span> <span class="token punctuation">{</span>*<span class="token punctuation">}</span>
 */</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">updateData4Key</span><span class="token punctuation">(</span><span class="token constant">DB</span><span class="token operator">:</span> IDBDatabase<span class="token punctuation">,</span> storeName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> key<span class="token operator">:</span> IDBValidKey<span class="token punctuation">,</span> data<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 创建一个事务，只针对一个仓库</span>
    <span class="token keyword">const</span> transaction<span class="token operator">:</span> IDBTransaction <span class="token operator">=</span> <span class="token constant">DB</span><span class="token punctuation">.</span><span class="token function">transaction</span><span class="token punctuation">(</span>storeName<span class="token punctuation">,</span> <span class="token string">&#39;readwrite&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 通过事务获取仓库实例</span>
    <span class="token keyword">const</span> store<span class="token operator">:</span> IDBObjectStore <span class="token operator">=</span> transaction<span class="token punctuation">.</span><span class="token function">objectStore</span><span class="token punctuation">(</span>storeName<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 获取旧数据</span>
    <span class="token keyword">const</span> oldData <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>resove<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> res<span class="token operator">:</span> IDBRequest <span class="token operator">=</span> store<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>

        res<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;success&#39;</span><span class="token punctuation">,</span> event <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">resove</span><span class="token punctuation">(</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>target <span class="token keyword">as</span> IDBRequest<span class="token punctuation">)</span><span class="token punctuation">.</span>result <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        res<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>object<span class="token operator">&gt;</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>resove<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> res<span class="token operator">:</span> IDBRequest<span class="token operator">&lt;</span>IDBValidKey<span class="token operator">&gt;</span> <span class="token operator">=</span> store<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>
            <span class="token punctuation">{</span>
                <span class="token operator">...</span>oldData<span class="token punctuation">,</span>
                <span class="token operator">...</span>data
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            key
        <span class="token punctuation">)</span><span class="token punctuation">;</span>

        res<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;success&#39;</span><span class="token punctuation">,</span> event <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">resove</span><span class="token punctuation">(</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>target <span class="token keyword">as</span> IDBRequest<span class="token punctuation">)</span><span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        res<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 数据库连接成功</span>
DBLink<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;success&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> event <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// @ts-expect-error</span>
    <span class="token constant">DB</span> <span class="token operator">=</span> <span class="token punctuation">(</span>event <span class="token keyword">as</span> IDBVersionChangeEvent<span class="token punctuation">)</span><span class="token punctuation">.</span>target<span class="token punctuation">.</span>result<span class="token punctuation">;</span>

    <span class="token comment">// 修改数据</span>
    <span class="token keyword">await</span> <span class="token function">updateData4Key</span><span class="token punctuation">(</span><span class="token constant">DB</span><span class="token punctuation">,</span> <span class="token string">&#39;users&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;hhh&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;updateData4Key&#39;</span><span class="token punctuation">,</span> <span class="token keyword">await</span> <span class="token function">findData4Key</span><span class="token punctuation">(</span><span class="token constant">DB</span><span class="token punctuation">,</span> <span class="token string">&#39;users&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {name: &#39;hhh&#39;, age: 18, sex: 1}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="删除数据" tabindex="-1"><a class="header-anchor" href="#删除数据" aria-hidden="true">#</a> 删除数据</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span>: 根据主键删除数据
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>IDBDatabase<span class="token punctuation">}</span> DB
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>string<span class="token punctuation">}</span> storeName
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>IDBValidKey<span class="token punctuation">}</span> key
 * <span class="token keyword">@return</span> <span class="token punctuation">{</span>*<span class="token punctuation">}</span>
 */</span>
<span class="token keyword">function</span> <span class="token function">removeData4Key</span><span class="token punctuation">(</span><span class="token constant">DB</span><span class="token operator">:</span> IDBDatabase<span class="token punctuation">,</span> storeName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> key<span class="token operator">:</span> IDBValidKey<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 创建一个事务，只针对一个仓库</span>
    <span class="token keyword">const</span> transaction<span class="token operator">:</span> IDBTransaction <span class="token operator">=</span> <span class="token constant">DB</span><span class="token punctuation">.</span><span class="token function">transaction</span><span class="token punctuation">(</span>storeName<span class="token punctuation">,</span> <span class="token string">&#39;readwrite&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 通过事务获取仓库实例</span>
    <span class="token keyword">const</span> store<span class="token operator">:</span> IDBObjectStore <span class="token operator">=</span> transaction<span class="token punctuation">.</span><span class="token function">objectStore</span><span class="token punctuation">(</span>storeName<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>resove<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> res<span class="token operator">:</span> IDBRequest <span class="token operator">=</span> store<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>

        res<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;success&#39;</span><span class="token punctuation">,</span> event <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">resove</span><span class="token punctuation">(</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>target <span class="token keyword">as</span> IDBRequest<span class="token punctuation">)</span><span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        res<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 数据库连接成功</span>
DBLink<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;success&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> event <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// @ts-expect-error</span>
    <span class="token constant">DB</span> <span class="token operator">=</span> <span class="token punctuation">(</span>event <span class="token keyword">as</span> IDBVersionChangeEvent<span class="token punctuation">)</span><span class="token punctuation">.</span>target<span class="token punctuation">.</span>result<span class="token punctuation">;</span>

    <span class="token comment">// 删除数据</span>
    <span class="token keyword">await</span> <span class="token function">removeData4Key</span><span class="token punctuation">(</span><span class="token constant">DB</span><span class="token punctuation">,</span> <span class="token string">&#39;users&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;removeData4Key&#39;</span><span class="token punctuation">,</span> <span class="token keyword">await</span> <span class="token function">findData4Key</span><span class="token punctuation">(</span><span class="token constant">DB</span><span class="token punctuation">,</span> <span class="token string">&#39;users&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// undefined</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="全部代码" tabindex="-1"><a class="header-anchor" href="#全部代码" aria-hidden="true">#</a> 全部代码</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 数据库连接</span>
<span class="token keyword">let</span> DBLink<span class="token operator">:</span> IDBOpenDBRequest<span class="token punctuation">;</span>
<span class="token comment">// 数据库</span>
<span class="token keyword">let</span> <span class="token constant">DB</span><span class="token operator">:</span> IDBDatabase<span class="token punctuation">;</span>

DBLink <span class="token operator">=</span> window<span class="token punctuation">.</span>indexedDB<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&#39;admin&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span>: 初始化数据库
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>*<span class="token punctuation">}</span> DB 数据库IDBDatabase实例
 * <span class="token keyword">@return</span> <span class="token punctuation">{</span>*<span class="token punctuation">}</span>
 */</span>
<span class="token keyword">function</span> <span class="token function">initDB</span><span class="token punctuation">(</span><span class="token constant">DB</span><span class="token operator">:</span> IDBDatabase<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 初始化users仓库，如果users仓库不存在</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token constant">DB</span><span class="token punctuation">.</span>objectStoreNames<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&#39;users&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> store<span class="token operator">:</span> IDBObjectStore <span class="token operator">=</span> <span class="token constant">DB</span><span class="token punctuation">.</span><span class="token function">createObjectStore</span><span class="token punctuation">(</span><span class="token string">&#39;users&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> autoIncrement<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 初始化仓库索引，unique为是否重复</span>
        store<span class="token punctuation">.</span><span class="token function">createIndex</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> unique<span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        store<span class="token punctuation">.</span><span class="token function">createIndex</span><span class="token punctuation">(</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> unique<span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        store<span class="token punctuation">.</span><span class="token function">createIndex</span><span class="token punctuation">(</span><span class="token string">&#39;sex&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;sex&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> unique<span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span>: 添加数据
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>IDBDatabase<span class="token punctuation">}</span> DB 数据库
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>string<span class="token punctuation">}</span> storeName 仓库名称
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>any<span class="token punctuation">}</span> data 数据
 * <span class="token keyword">@return</span> <span class="token punctuation">{</span>*<span class="token punctuation">}</span>
 */</span>
<span class="token keyword">function</span> <span class="token function">addData</span><span class="token punctuation">(</span><span class="token constant">DB</span><span class="token operator">:</span> IDBDatabase<span class="token punctuation">,</span> storeName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> data<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 创建一个事务，只针对一个仓库</span>
    <span class="token keyword">const</span> transaction<span class="token operator">:</span> IDBTransaction <span class="token operator">=</span> <span class="token constant">DB</span><span class="token punctuation">.</span><span class="token function">transaction</span><span class="token punctuation">(</span>storeName<span class="token punctuation">,</span> <span class="token string">&#39;readwrite&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 通过事务获取仓库实例</span>
    <span class="token keyword">const</span> store<span class="token operator">:</span> IDBObjectStore <span class="token operator">=</span> transaction<span class="token punctuation">.</span><span class="token function">objectStore</span><span class="token punctuation">(</span>storeName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 添加数据</span>
    store<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span>: 通过主键查找
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>IDBDatabase<span class="token punctuation">}</span> DB 数据库
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>string<span class="token punctuation">}</span> storeName 仓库名称
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>IDBValidKey<span class="token punctuation">}</span> key 主键
 * <span class="token keyword">@return</span> <span class="token punctuation">{</span>*<span class="token punctuation">}</span>
 */</span>
<span class="token keyword">function</span> <span class="token function">findData4Key</span><span class="token punctuation">(</span><span class="token constant">DB</span><span class="token operator">:</span> IDBDatabase<span class="token punctuation">,</span> storeName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> key<span class="token operator">:</span> IDBValidKey<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 创建一个事务，只针对一个仓库</span>
    <span class="token keyword">const</span> transaction<span class="token operator">:</span> IDBTransaction <span class="token operator">=</span> <span class="token constant">DB</span><span class="token punctuation">.</span><span class="token function">transaction</span><span class="token punctuation">(</span>storeName<span class="token punctuation">,</span> <span class="token string">&#39;readwrite&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 通过事务获取仓库实例</span>
    <span class="token keyword">const</span> store<span class="token operator">:</span> IDBObjectStore <span class="token operator">=</span> transaction<span class="token punctuation">.</span><span class="token function">objectStore</span><span class="token punctuation">(</span>storeName<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>resove<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> res<span class="token operator">:</span> IDBRequest <span class="token operator">=</span> store<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>

        res<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;success&#39;</span><span class="token punctuation">,</span> event <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">resove</span><span class="token punctuation">(</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>target <span class="token keyword">as</span> IDBRequest<span class="token punctuation">)</span><span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        res<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span>: 通过游标获取所有数据
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>IDBDatabase<span class="token punctuation">}</span> DB 数据库
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>string<span class="token punctuation">}</span> storeName 仓库名称
 * <span class="token keyword">@return</span> <span class="token punctuation">{</span>*<span class="token punctuation">}</span>
 */</span>
<span class="token keyword">function</span> <span class="token function">findData4All</span><span class="token punctuation">(</span><span class="token constant">DB</span><span class="token operator">:</span> IDBDatabase<span class="token punctuation">,</span> storeName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 创建一个事务，只针对一个仓库</span>
    <span class="token keyword">const</span> transaction<span class="token operator">:</span> IDBTransaction <span class="token operator">=</span> <span class="token constant">DB</span><span class="token punctuation">.</span><span class="token function">transaction</span><span class="token punctuation">(</span>storeName<span class="token punctuation">,</span> <span class="token string">&#39;readwrite&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 通过事务获取仓库实例</span>
    <span class="token keyword">const</span> store<span class="token operator">:</span> IDBObjectStore <span class="token operator">=</span> transaction<span class="token punctuation">.</span><span class="token function">objectStore</span><span class="token punctuation">(</span>storeName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 获取游标</span>
    <span class="token keyword">const</span> cursor<span class="token operator">:</span> IDBRequest<span class="token operator">&lt;</span>IDBCursorWithValue <span class="token operator">|</span> <span class="token keyword">null</span><span class="token operator">&gt;</span> <span class="token operator">=</span> store<span class="token punctuation">.</span><span class="token function">openCursor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>resove<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> list<span class="token operator">:</span> IDBCursorWithValue<span class="token punctuation">[</span><span class="token string">&#39;value&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        cursor<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;success&#39;</span><span class="token punctuation">,</span> event <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">// @ts-expect-error</span>
            <span class="token keyword">const</span> currentCursor<span class="token operator">:</span> IDBCursorWithValue <span class="token operator">=</span> event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>result<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>currentCursor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// 必须要检查</span>
                list<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>currentCursor<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
                currentCursor<span class="token punctuation">.</span><span class="token function">continue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment">// 迭代完毕</span>
                <span class="token function">resove</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        cursor<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span>: 通过索引查找
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>IDBDatabase<span class="token punctuation">}</span> DB 数据库
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>string<span class="token punctuation">}</span> storeName 仓库名称
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>IDBValidKey<span class="token punctuation">}</span> key 主键
 * <span class="token keyword">@return</span> <span class="token punctuation">{</span>*<span class="token punctuation">}</span>
 */</span>
<span class="token keyword">function</span> <span class="token function">findData4Index</span><span class="token punctuation">(</span><span class="token constant">DB</span><span class="token operator">:</span> IDBDatabase<span class="token punctuation">,</span> storeName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> indexKey<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> indexValue<span class="token operator">:</span> IDBValidKey <span class="token operator">|</span> IDBKeyRange<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 创建一个事务，只针对一个仓库</span>
    <span class="token keyword">const</span> transaction<span class="token operator">:</span> IDBTransaction <span class="token operator">=</span> <span class="token constant">DB</span><span class="token punctuation">.</span><span class="token function">transaction</span><span class="token punctuation">(</span>storeName<span class="token punctuation">,</span> <span class="token string">&#39;readwrite&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 通过事务获取仓库实例</span>
    <span class="token keyword">const</span> store<span class="token operator">:</span> IDBObjectStore <span class="token operator">=</span> transaction<span class="token punctuation">.</span><span class="token function">objectStore</span><span class="token punctuation">(</span>storeName<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>resove<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> res<span class="token operator">:</span> IDBRequest <span class="token operator">=</span> store<span class="token punctuation">.</span><span class="token function">index</span><span class="token punctuation">(</span>indexKey<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>indexValue<span class="token punctuation">)</span><span class="token punctuation">;</span>

        res<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;success&#39;</span><span class="token punctuation">,</span> event <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">resove</span><span class="token punctuation">(</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>target <span class="token keyword">as</span> IDBRequest<span class="token punctuation">)</span><span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        res<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span>: 通过索引+游标获取所有数据
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>IDBDatabase<span class="token punctuation">}</span> DB 数据库
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>string<span class="token punctuation">}</span> storeName 仓库名称
 * <span class="token keyword">@return</span> <span class="token punctuation">{</span>*<span class="token punctuation">}</span>
 */</span>
<span class="token keyword">function</span> <span class="token function">findData4IndexCursor</span><span class="token punctuation">(</span>
    <span class="token constant">DB</span><span class="token operator">:</span> IDBDatabase<span class="token punctuation">,</span>
    storeName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
    indexKey<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
    indexValue<span class="token operator">:</span> IDBValidKey <span class="token operator">|</span> IDBKeyRange
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 创建一个事务，只针对一个仓库</span>
    <span class="token keyword">const</span> transaction<span class="token operator">:</span> IDBTransaction <span class="token operator">=</span> <span class="token constant">DB</span><span class="token punctuation">.</span><span class="token function">transaction</span><span class="token punctuation">(</span>storeName<span class="token punctuation">,</span> <span class="token string">&#39;readwrite&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 通过事务获取仓库实例</span>
    <span class="token keyword">const</span> store<span class="token operator">:</span> IDBObjectStore <span class="token operator">=</span> transaction<span class="token punctuation">.</span><span class="token function">objectStore</span><span class="token punctuation">(</span>storeName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 获取游标</span>
    <span class="token keyword">const</span> cursor<span class="token operator">:</span> IDBRequest<span class="token operator">&lt;</span>IDBCursorWithValue <span class="token operator">|</span> <span class="token keyword">null</span><span class="token operator">&gt;</span> <span class="token operator">=</span> store
        <span class="token punctuation">.</span><span class="token function">index</span><span class="token punctuation">(</span>indexKey<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">openCursor</span><span class="token punctuation">(</span>IDBKeyRange<span class="token punctuation">.</span><span class="token function">only</span><span class="token punctuation">(</span>indexValue<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>resove<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> list<span class="token operator">:</span> IDBCursorWithValue<span class="token punctuation">[</span><span class="token string">&#39;value&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        cursor<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;success&#39;</span><span class="token punctuation">,</span> event <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">// @ts-expect-error</span>
            <span class="token keyword">const</span> currentCursor<span class="token operator">:</span> IDBCursorWithValue <span class="token operator">=</span> event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>result<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>currentCursor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// 必须要检查</span>
                list<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>currentCursor<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
                currentCursor<span class="token punctuation">.</span><span class="token function">continue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment">// 迭代完毕</span>
                <span class="token function">resove</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        cursor<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span>: 通过主键修改数据
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>IDBDatabase<span class="token punctuation">}</span> DB
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>string<span class="token punctuation">}</span> storeName
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>IDBValidKey<span class="token punctuation">}</span> key
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>any<span class="token punctuation">}</span> data
 * <span class="token keyword">@return</span> <span class="token punctuation">{</span>*<span class="token punctuation">}</span>
 */</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">updateData4Key</span><span class="token punctuation">(</span><span class="token constant">DB</span><span class="token operator">:</span> IDBDatabase<span class="token punctuation">,</span> storeName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> key<span class="token operator">:</span> IDBValidKey<span class="token punctuation">,</span> data<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 创建一个事务，只针对一个仓库</span>
    <span class="token keyword">const</span> transaction<span class="token operator">:</span> IDBTransaction <span class="token operator">=</span> <span class="token constant">DB</span><span class="token punctuation">.</span><span class="token function">transaction</span><span class="token punctuation">(</span>storeName<span class="token punctuation">,</span> <span class="token string">&#39;readwrite&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 通过事务获取仓库实例</span>
    <span class="token keyword">const</span> store<span class="token operator">:</span> IDBObjectStore <span class="token operator">=</span> transaction<span class="token punctuation">.</span><span class="token function">objectStore</span><span class="token punctuation">(</span>storeName<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 获取旧数据</span>
    <span class="token keyword">const</span> oldData <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>resove<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> res<span class="token operator">:</span> IDBRequest <span class="token operator">=</span> store<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>

        res<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;success&#39;</span><span class="token punctuation">,</span> event <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">resove</span><span class="token punctuation">(</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>target <span class="token keyword">as</span> IDBRequest<span class="token punctuation">)</span><span class="token punctuation">.</span>result <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        res<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>object<span class="token operator">&gt;</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>resove<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> res<span class="token operator">:</span> IDBRequest<span class="token operator">&lt;</span>IDBValidKey<span class="token operator">&gt;</span> <span class="token operator">=</span> store<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>
            <span class="token punctuation">{</span>
                <span class="token operator">...</span>oldData<span class="token punctuation">,</span>
                <span class="token operator">...</span>data
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            key
        <span class="token punctuation">)</span><span class="token punctuation">;</span>

        res<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;success&#39;</span><span class="token punctuation">,</span> event <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">resove</span><span class="token punctuation">(</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>target <span class="token keyword">as</span> IDBRequest<span class="token punctuation">)</span><span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        res<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span>: 根据主键删除数据
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>IDBDatabase<span class="token punctuation">}</span> DB
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>string<span class="token punctuation">}</span> storeName
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>IDBValidKey<span class="token punctuation">}</span> key
 * <span class="token keyword">@return</span> <span class="token punctuation">{</span>*<span class="token punctuation">}</span>
 */</span>
<span class="token keyword">function</span> <span class="token function">removeData4Key</span><span class="token punctuation">(</span><span class="token constant">DB</span><span class="token operator">:</span> IDBDatabase<span class="token punctuation">,</span> storeName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> key<span class="token operator">:</span> IDBValidKey<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 创建一个事务，只针对一个仓库</span>
    <span class="token keyword">const</span> transaction<span class="token operator">:</span> IDBTransaction <span class="token operator">=</span> <span class="token constant">DB</span><span class="token punctuation">.</span><span class="token function">transaction</span><span class="token punctuation">(</span>storeName<span class="token punctuation">,</span> <span class="token string">&#39;readwrite&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 通过事务获取仓库实例</span>
    <span class="token keyword">const</span> store<span class="token operator">:</span> IDBObjectStore <span class="token operator">=</span> transaction<span class="token punctuation">.</span><span class="token function">objectStore</span><span class="token punctuation">(</span>storeName<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>resove<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> res<span class="token operator">:</span> IDBRequest <span class="token operator">=</span> store<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>

        res<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;success&#39;</span><span class="token punctuation">,</span> event <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">resove</span><span class="token punctuation">(</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>target <span class="token keyword">as</span> IDBRequest<span class="token punctuation">)</span><span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        res<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 数据库连接成功</span>
DBLink<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;success&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> event <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// @ts-expect-error</span>
    <span class="token constant">DB</span> <span class="token operator">=</span> <span class="token punctuation">(</span>event <span class="token keyword">as</span> IDBVersionChangeEvent<span class="token punctuation">)</span><span class="token punctuation">.</span>target<span class="token punctuation">.</span>result<span class="token punctuation">;</span>

    <span class="token comment">// 添加数据</span>
    <span class="token function">addData</span><span class="token punctuation">(</span><span class="token constant">DB</span><span class="token punctuation">,</span> <span class="token string">&#39;users&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
        name<span class="token operator">:</span> <span class="token string">&#39;ma&#39;</span><span class="token punctuation">,</span>
        age<span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span>
        sex<span class="token operator">:</span> <span class="token number">1</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">addData</span><span class="token punctuation">(</span><span class="token constant">DB</span><span class="token punctuation">,</span> <span class="token string">&#39;users&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
        name<span class="token operator">:</span> <span class="token string">&#39;ming&#39;</span><span class="token punctuation">,</span>
        age<span class="token operator">:</span> <span class="token number">19</span><span class="token punctuation">,</span>
        sex<span class="token operator">:</span> <span class="token number">0</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 根据key获取数据</span>
    <span class="token keyword">const</span> findData4KeyRes <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">findData4Key</span><span class="token punctuation">(</span><span class="token constant">DB</span><span class="token punctuation">,</span> <span class="token string">&#39;users&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;findData4KeyRes&#39;</span><span class="token punctuation">,</span> findData4KeyRes<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {name: &#39;ma&#39;, age: 18, sex: 1}</span>

    <span class="token comment">// 根据游标获取所有数据</span>
    <span class="token keyword">const</span> findData4AllRes <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">findData4All</span><span class="token punctuation">(</span><span class="token constant">DB</span><span class="token punctuation">,</span> <span class="token string">&#39;users&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;findData4AllRes&#39;</span><span class="token punctuation">,</span> findData4AllRes<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [...]</span>

    <span class="token comment">// 根据索引获取数据</span>
    <span class="token keyword">const</span> findData4IndexRes <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">findData4Index</span><span class="token punctuation">(</span><span class="token constant">DB</span><span class="token punctuation">,</span> <span class="token string">&#39;users&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;ma&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;findData4IndexRes&#39;</span><span class="token punctuation">,</span> findData4IndexRes<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {name: &#39;ma&#39;, age: 18, sex: 1}</span>

    <span class="token comment">// 根据索引+游标获取数据</span>
    <span class="token keyword">const</span> findData4IndexCursorRes <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">findData4IndexCursor</span><span class="token punctuation">(</span><span class="token constant">DB</span><span class="token punctuation">,</span> <span class="token string">&#39;users&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;ma&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;findData4IndexCursorRes&#39;</span><span class="token punctuation">,</span> findData4IndexCursorRes<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [...]</span>

    <span class="token comment">// 修改数据</span>
    <span class="token keyword">await</span> <span class="token function">updateData4Key</span><span class="token punctuation">(</span><span class="token constant">DB</span><span class="token punctuation">,</span> <span class="token string">&#39;users&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;hhh&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;updateData4Key&#39;</span><span class="token punctuation">,</span> <span class="token keyword">await</span> <span class="token function">findData4Key</span><span class="token punctuation">(</span><span class="token constant">DB</span><span class="token punctuation">,</span> <span class="token string">&#39;users&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {name: &#39;hhh&#39;, age: 18, sex: 1}</span>

    <span class="token comment">// 删除数据</span>
    <span class="token keyword">await</span> <span class="token function">removeData4Key</span><span class="token punctuation">(</span><span class="token constant">DB</span><span class="token punctuation">,</span> <span class="token string">&#39;users&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;removeData4Key&#39;</span><span class="token punctuation">,</span> <span class="token keyword">await</span> <span class="token function">findData4Key</span><span class="token punctuation">(</span><span class="token constant">DB</span><span class="token punctuation">,</span> <span class="token string">&#39;users&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// undefined</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 数据库更新</span>
DBLink<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;upgradeneeded&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>event<span class="token operator">:</span> IDBVersionChangeEvent<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// @ts-expect-error</span>
    <span class="token constant">DB</span> <span class="token operator">=</span> event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>result<span class="token punctuation">;</span>

    <span class="token function">initDB</span><span class="token punctuation">(</span><span class="token constant">DB</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

DBLink<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> event <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> event <span class="token keyword">as</span> IDBVersionChangeEvent<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,30);function d(v,m){const a=i("ExternalLinkIcon");return p(),e("div",null,[u,n("p",null,[n("a",k,[o("indexedDB api"),c(a)])]),r])}const D=t(l,[["render",d],["__file","indexedDB.html.vue"]]);export{D as default};
