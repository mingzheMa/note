import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as n,c as a,d as s}from"./app.002a81c8.js";const i={},t=s(`<h1 id="循环" tabindex="-1"><a class="header-anchor" href="#循环" aria-hidden="true">#</a> 循环</h1><h2 id="执行顺序" tabindex="-1"><a class="header-anchor" href="#执行顺序" aria-hidden="true">#</a> 执行顺序</h2><h3 id="while" tabindex="-1"><a class="header-anchor" href="#while" aria-hidden="true">#</a> while</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">while</span> <span class="token punctuation">(</span>expression<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    statement
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>while</code> 语句会先计算 <code>expression</code> 表达式，后执行 <code>statement</code> 代码块</p><h3 id="do-while" tabindex="-1"><a class="header-anchor" href="#do-while" aria-hidden="true">#</a> do/while</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">do</span> <span class="token punctuation">{</span>
    statement
<span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span>expression<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>do/while</code> 会先执行 <code>statement</code> 代码块，在计算 <code>expression</code> 表达式</p><h3 id="for" tabindex="-1"><a class="header-anchor" href="#for" aria-hidden="true">#</a> for</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">for</span> <span class="token punctuation">(</span>initlalize<span class="token punctuation">;</span> test<span class="token punctuation">;</span> increment<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    statement
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>for</code> 语句执行顺序</p><ol><li>先计算 <code>initlalize</code> 表达式</li><li>在计算 <code>test</code> 表达式</li><li>后在运行 <code>statement</code> 代码块</li><li>最后执行 <code>increment</code> 部分</li></ol><p>转化为 <code>while</code> 语句如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>initlalize
<span class="token keyword">while</span> <span class="token punctuation">(</span>test<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    statement
    increment
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="for-in" tabindex="-1"><a class="header-anchor" href="#for-in" aria-hidden="true">#</a> for/in</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">for</span> <span class="token punctuation">(</span>varible <span class="token keyword">in</span> object<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    statement
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>for/in</code> 语句会先计算 <code>object</code> 表达式，之后将循环该表达式结果，并将枚举值赋值 <code>varible</code>，最后执行 <code>statement</code> 代码块</p>`,17),c=[t];function d(o,l){return n(),a("div",null,c)}const u=e(i,[["render",d],["__file","循环.html.vue"]]);export{u as default};
