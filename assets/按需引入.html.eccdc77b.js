import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,d as t}from"./app.002a81c8.js";const e={},p=t(`<h1 id="按需引入" tabindex="-1"><a class="header-anchor" href="#按需引入" aria-hidden="true">#</a> 按需引入</h1><p>webpack提供了<code>import(路径)</code>函数，可以在代码运行的时候加载模块</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// index.js</span>
<span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&quot;./a.js&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>上面代码只有在执行index.js代码的时候才会引入a.js代码</p><p>我们举个例子看下webpack究竟是怎么实现的</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
<span class="token keyword">import</span> VueRouter<span class="token punctuation">,</span> <span class="token punctuation">{</span> RouteConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-router&#39;</span>
<span class="token keyword">import</span> HomeView <span class="token keyword">from</span> <span class="token string">&#39;../views/HomeView.vue&#39;</span>

Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>VueRouter<span class="token punctuation">)</span>

<span class="token keyword">const</span> <span class="token literal-property property">routes</span><span class="token operator">:</span> Array<span class="token operator">&lt;</span>RouteConfig<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;home&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">component</span><span class="token operator">:</span> HomeView
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/about&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;about&#39;</span><span class="token punctuation">,</span>
    <span class="token comment">// route level code-splitting</span>
    <span class="token comment">// this generates a separate chunk (about.[hash].js) for this route</span>
    <span class="token comment">// which is lazy-loaded when the route is visited.</span>
    <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;../views/AboutView.vue&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">]</span>

<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VueRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">&#39;history&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">base</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">BASE_URL</span><span class="token punctuation">,</span>
  routes
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> router
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><br><br><br><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们就拿vue-router按需引入来说，将webpack的mode模式调成none，方便我们查看打包结果</p><h2 id="打包目录" tabindex="-1"><a class="header-anchor" href="#打包目录" aria-hidden="true">#</a> 打包目录</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>dist
├── css
│   └── app.0f04bb27.css
├── favicon.ico
├── index.html
└── js
    ├── 2.3094c647.js
    ├── 2.3094c647.js.map
    ├── app.4d468d18.js
    ├── app.4d468d18.js.map
    ├── chunk-vendors.817fd51e.js
    └── chunk-vendors.817fd51e.js.map
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们看下打包结果的js目录，简单介绍下里面的文件</p><ul><li>chunk-vendors.817fd51e.js 是我们引入第三方库的打包结果（node_modules目录下的库）</li><li>app.4d468d18.js 就是我们在webpack中配置的入口文件打包出的结果（在vue中默认的入口文件是src/main.js）</li><li>2.3094c647.js 就是我们配置<code>import</code>函数后打包出来的结果</li></ul><p>我们配置了<code>import</code>函数，webpack就会单独把这个文件打包，至于包的名字（“2”）是因为我们没有配置</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>  <span class="token punctuation">{</span>
    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/about&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;about&#39;</span><span class="token punctuation">,</span>
    <span class="token comment">// route level code-splitting</span>
    <span class="token comment">// this generates a separate chunk (about.[hash].js) for this route</span>
    <span class="token comment">// which is lazy-loaded when the route is visited.</span>
    <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token comment">/* webpackChunkName: &quot;about&quot; */</span> <span class="token string">&#39;../views/AboutView.vue&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><div class="highlight-line"> </div><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果配置了包名，webpack就会打出about.[hash].js的包了</p><p>这里也可以配置多个<code>import</code>函数并配置同样的包名，最终会打包成一个</p><h2 id="打包结果" tabindex="-1"><a class="header-anchor" href="#打包结果" aria-hidden="true">#</a> 打包结果</h2><p>我们通过搜索代码的方式去app.4d468d18.js文件下找到打包后的结果，看下webpack究竟做了什么</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> __webpack_modules__ <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token number">7</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>
    <span class="token parameter">__unused_webpack_module<span class="token punctuation">,</span>
    __webpack_exports__<span class="token punctuation">,</span>
    __webpack_require__</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    
    <span class="token keyword">const</span> routes <span class="token operator">=</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;home&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">component</span><span class="token operator">:</span> _views_HomeView_vue__WEBPACK_IMPORTED_MODULE_0__<span class="token punctuation">[</span><span class="token string">&quot;default&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&quot;/about&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;about&quot;</span><span class="token punctuation">,</span>
        <span class="token comment">// route level code-splitting</span>
        <span class="token comment">// this generates a separate chunk (about.[hash].js) for this route</span>
        <span class="token comment">// which is lazy-loaded when the route is visited.</span>
        <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
          __webpack_require__
            <span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token comment">/* import() */</span> <span class="token number">2</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token function">__webpack_require__</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>__webpack_require__<span class="token punctuation">,</span> <span class="token number">129</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token comment">// ...</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>省略了无关代码，可以看出webpack将<code>import</code>函数变成了<code>_<em>webpack_require</em>_.e</code>函数，当我们切换到about路由时就会触发component函数，从而触发<code>_<em>webpack_require</em>_.e</code>函数</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>__webpack_require__<span class="token punctuation">.</span>f <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// This file contains only the entry chunk.</span>
<span class="token comment">// The chunk loading function for additional chunks</span>
__webpack_require__<span class="token punctuation">.</span><span class="token function-variable function">e</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">chunkId</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>__webpack_require__<span class="token punctuation">.</span>f<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">promises<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		__webpack_require__<span class="token punctuation">.</span>f<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">(</span>chunkId<span class="token punctuation">,</span> promises<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> promises<span class="token punctuation">;</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们找到<code>_<em>webpack_require</em>_.e</code>函数声明的地方，这里实际上遍历调用<code>_<em>webpack_require</em>_.f</code>属性的方法</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>__webpack_require__<span class="token punctuation">.</span>f<span class="token punctuation">.</span><span class="token function-variable function">j</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">chunkId<span class="token punctuation">,</span> promises</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// a Promise means &quot;currently loading&quot;.</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>installedChunkData<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// ...</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// all chunks have JS</span>
            <span class="token comment">// ...</span>

            <span class="token comment">// start chunk loading</span>
            <span class="token keyword">var</span> url <span class="token operator">=</span> __webpack_require__<span class="token punctuation">.</span>p <span class="token operator">+</span> __webpack_require__<span class="token punctuation">.</span><span class="token function">u</span><span class="token punctuation">(</span>chunkId<span class="token punctuation">)</span><span class="token punctuation">;</span>
            
            <span class="token comment">// ...</span>
            __webpack_require__<span class="token punctuation">.</span><span class="token function">l</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> loadingEnded<span class="token punctuation">,</span> <span class="token string">&quot;chunk-&quot;</span> <span class="token operator">+</span> chunkId<span class="token punctuation">,</span> chunkId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们看到这里对<code>_<em>webpack_require</em>_.f</code>属性赋值，函数获取url并调用<code>_<em>webpack_require</em>_.r</code>函数</p><p>我们先看下获取url部分</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>__webpack_require__<span class="token punctuation">.</span><span class="token function-variable function">u</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">chunkId</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// return url for filenames based on template</span>
	<span class="token keyword">return</span> <span class="token string">&quot;js/&quot;</span> <span class="token operator">+</span> chunkId <span class="token operator">+</span> <span class="token string">&quot;.&quot;</span> <span class="token operator">+</span> <span class="token string">&quot;3094c647&quot;</span> <span class="token operator">+</span> <span class="token string">&quot;.js&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这就很好理解了，直接返回了文件路径，我们的模块名是2，则返回“js/2.3094c647.js”</p><p>之后我们看下<code>_<em>webpack_require</em>_.r</code>函数</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>__webpack_require__<span class="token punctuation">.</span><span class="token function-variable function">l</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> done<span class="token punctuation">,</span> key<span class="token punctuation">,</span> chunkId</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">var</span> script<span class="token punctuation">,</span> needAttach<span class="token punctuation">;</span>
	<span class="token keyword">if</span><span class="token punctuation">(</span>key <span class="token operator">!==</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">var</span> scripts <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">&quot;script&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> scripts<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">var</span> s <span class="token operator">=</span> scripts<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;src&quot;</span><span class="token punctuation">)</span> <span class="token operator">==</span> url <span class="token operator">||</span> s<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;data-webpack&quot;</span><span class="token punctuation">)</span> <span class="token operator">==</span> dataWebpackPrefix <span class="token operator">+</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span> script <span class="token operator">=</span> s<span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>script<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		needAttach <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
		script <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;script&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		script<span class="token punctuation">.</span>charset <span class="token operator">=</span> <span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">;</span>
		script<span class="token punctuation">.</span>timeout <span class="token operator">=</span> <span class="token number">120</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>__webpack_require__<span class="token punctuation">.</span>nc<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			script<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;nonce&quot;</span><span class="token punctuation">,</span> __webpack_require__<span class="token punctuation">.</span>nc<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		script<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;data-webpack&quot;</span><span class="token punctuation">,</span> dataWebpackPrefix <span class="token operator">+</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
		script<span class="token punctuation">.</span>src <span class="token operator">=</span> url<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	
    <span class="token comment">// ...</span>

	needAttach <span class="token operator">&amp;&amp;</span> document<span class="token punctuation">.</span>head<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>script<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>函数开始做了容错，如果已经有这个script标签（js/2.3094c647.js，也就是按需引入的包），则什么也不做（这里通过needAttach变量判断）</p><p>如果没有这个标签，则创建script标签把他插入到head标签里</p><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><p>简单来说就是webpack将impot函数的逻辑变成，当函数触发，创建一个script标签，并将src属性配置成引入的文件路径，最后添加到head标签中，这样就将文件引入到项目中了</p>`,32),o=[p];function c(i,l){return s(),a("div",null,o)}const d=n(e,[["render",c],["__file","按需引入.html.vue"]]);export{d as default};
